knitr::opts_chunk$set(echo = TRUE)
bopmod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), family = SHASHo2(), data = tunirgb, control = gamlss.control(n.cyc = 100))
knitr::opts_chunk$set(echo = TRUE)
bopmod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), family = JSUo(), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
fitDist(mold_cover, data = tunidata, type = "realline", try.gamlss = T)
knitr::opts_chunk$set(echo = TRUE)
tunidata$mold_cover <- as.factor(tunidata$mold_cover)
fitDist(mold_cover, data = tunidata, type = "realline", try.gamlss = T)
knitr::opts_chunk$set(echo = TRUE)
tunidata <- read.csv("tunicate_master.csv")
tunirgb <- tunirgb %>% mutate(deltachangergb = X48hr_rgb-initial_rgb)
knitr::opts_chunk$set(echo = TRUE)
fit <- fitDist(mold_cover, data = tunidata, type = "realline", try.gamlss = T)
knitr::opts_chunk$set(echo = TRUE)
fit <- fitDist(mold_cover, data = tunidata, type = "realall", try.gamlss = T)
knitr::opts_chunk$set(echo = TRUE)
fit <- fitDist(mold_cover, data = tunidata, type = "realAll", try.gamlss = T)
fit$fits
knitr::opts_chunk$set(echo = TRUE)
bopmod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), family = SHASHo(), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
bopmod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), family = SHASHo(), data = tunirgb,
control = gamlss.control(n.cyc = 100))
knitr::opts_chunk$set(echo = TRUE)
tunirgb$mold_cover <- as.factor(tunirgb$mold_cover)
knitr::opts_chunk$set(echo = TRUE)
#There is something very wrong with thislol
bopmod <- lm(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
#There is something very wrong with thislol
bop1mod <- lm(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
bop1mod
knitr::opts_chunk$set(echo = TRUE)
summary(bop1mod)
summary(bop1mod)
knitr::opts_chunk$set(echo = TRUE)
tunirgb$mold_cover <- as.numeric(tunirgb$mold_cover)
#There is something very wrong with thislol
bop1mod <- lm(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), data = tunirgb)
summary(bop1mod)
fit <- fitDist(mold_cover, data = tunidata, type = "realAll", try.gamlss = T)
knitr::opts_chunk$set(echo = TRUE)
fit$fits
knitr::opts_chunk$set(echo = TRUE)
#There is something very wrong with thislol
bop1mod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), family = ST1(), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
#There is something very wrong with thislol
bop1mod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + re(random = ~1|colony_id), family = ST1(), data = tunirgb, method = CG())
knitr::opts_chunk$set(echo = TRUE)
#There is something very wrong with thislol
bop1mod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s + re(random = ~1|colony_id), family = ST1(), data = tunirgb, method = CG())
knitr::opts_chunk$set(echo = TRUE)
#There is something very wrong with thislol
bop1mod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s + re(random = ~1|colony_id), family = ST1(), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
#There is something very wrong with thislol
bop1mod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s, family = ST1(), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
#
na.omit(tubirbg)
knitr::opts_chunk$set(echo = TRUE)
#
na.omit(tunirbg)
knitr::opts_chunk$set(echo = TRUE)
#
na.omit(tunirgb)
#There is something very wrong with thislol
bop1mod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s, family = ST1(), data = tunirgb)
citation
version
knitr::opts_chunk$set(echo = TRUE)
tuni_stacked = tunidata %>%
group_by(mold_cover, temperature_c, water_type, exposure_time_s) %>%
summarise(frequency = n())%>%
mutate(temperature_c=  as.factor(temperature_c))
View(tuni_stacked)
View(tunidata)
View(tunirgb)
tunirgb %>% filter(water_type == 'seawater') %>% select(mold_cover)
tunirgb %>% filter(water_type == 'seawater') %>% dplyr::select(mold_cover)
tunirgb %>% filter(water_type == 'seawater') %>% dplyr::select(mold_cover) %>% uniq()
tunirgb %>% filter(water_type == 'seawater') %>% dplyr::select(mold_cover) %>% unique()
tunirgb %>% filter(water_type == 'freshwater') %>% dplyr::select(mold_cover) %>% unique()
tunirgb %>% dplyr::select(mold_cover) %>% unique()
tunirgb %>% dplyr::select(mold_cover) %>% arrange() %>% unique()
knitr::opts_chunk$set(echo = TRUE)
tunirgb <- tunirgb %>% mutate(deltachangergb = X48hr_rgb-initial_rgb)
tunirgb %>% dplyr::select(mold_cover) %>% arrange() %>% unique()
tunidata <- read.csv("tunicate_master.csv")
tunirgb <- tunidata %>%
mutate(exposure_time_s = as.factor(exposure_time_s)) %>%
mutate(temperature_c = as.factor(temperature_c))
View(tunirgb)
tunirgb <- tunirgb %>% mutate(deltachangergb = X48hr_rgb-initial_rgb)
View(tunirgb)
tunirgb$colony_id <- as.factor(tunirgb$colony_id)
bop1mod <- gamlss(mold_cover ~ water_type + temperature_c + exposure_time_s, family = ST1(), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
install.packages("ordinal")
knitr::opts_chunk$set(echo = TRUE)
library(ordinal)
knitr::opts_chunk$set(echo = TRUE)
ordinalmod <- clmm(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c +
(1 | colony_id), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
tunirgb$colony_id <- as.factor(tunirgb$colony_id)
tunirgb$mold_cover <- as.factor(tunirgb$mold_cover)
ordinalmod <- clmm(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c +
(1 | colony_id), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
ordinalmod <- clmm(as.formula(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c +
(1 | colony_id)), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
ordinalmod <- clmm(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c +
(1 | colony_id), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
summary(ordinalmod)
knitr::opts_chunk$set(echo = TRUE)
stepordinalmod <- stepAIC(ordinalmod, direction = "backward", trace = F)
knitr::opts_chunk$set(echo = TRUE)
stepordinalmod <- stepGAIC(ordinalmod, direction = "backward", trace = F)
knitr::opts_chunk$set(echo = TRUE)
stepordinalmod <- AIC(ordinalmod, direction = "backward", trace = F)
knitr::opts_chunk$set(echo = TRUE)
stepordinalmod <- extractAIC(ordinalmod, direction = "backward", trace = F)
knitr::opts_chunk$set(echo = TRUE)
formula(stepordinalmod)
knitr::opts_chunk$set(echo = TRUE)
drop1(ordinalmod, test = "Chi")
summary(ordinalmod)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm(mold_cover ~ temperature_c, data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm(mold_cover ~ temperature_c +(1 | colony_id), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
summary(ordinalmodreduced)
knitr::opts_chunk$set(echo = TRUE)
reducedmodel <- stepAIC(ordinalmod)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodnull <- clmm(mold_cover ~ 1, data = tunirgb)
summary(ordinalmod)
d
ordinalmodreduced <- clmm(mold_cover ~ temperature_c +(1 | colony_id), data = tunirgb)
summary(ordinalmodreduced)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodfull <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c +
(1 | colony_id), data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodfull <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c,
random = colony_id, data = tunirgb)
summary(ordinalmod)
knitr::opts_chunk$set(echo = TRUE)
ordinal1 <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c,
random = colony_id, data = tunirgb, Hess=TRUE, nAGQ=10)
knitr::opts_chunk$set(echo = TRUE)
summary(ordinal1)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s+
(1 | colony_id), data = tunirgb, Hess=TRUE, nAGQ=10)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s,
random = colony_id, data = tunirgb, Hess=TRUE, nAGQ=10)
summary(ordinalmodreduced)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm2(mold_cover ~ temperature_c + exposure_time_s,
random = colony_id, data = tunirgb, Hess=TRUE, nAGQ=10)
summary(ordinalmodreduced)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm2(mold_cover ~ temperature_c,
random = colony_id, data = tunirgb, Hess=TRUE, nAGQ=10)
summary(ordinalmodreduced)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm2(mold_cover ~ temperature_c, data = tunirgb, Hess=TRUE, nAGQ=10)
summary(ordinalmodreduced)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm(mold_cover ~ temperature_c, data = tunirgb, Hess=TRUE, nAGQ=10)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodreduced <- clmm2(mold_cover ~ temperature_c, data = tunirgb, Hess=TRUE, nAGQ=10)
knitr::opts_chunk$set(echo = TRUE)
stepordinal <- stepAIC(ordinalmodfull, direction = "backward", trace = F)
knitr::opts_chunk$set(echo = TRUE)
stepordinal <- stepGAIC(ordinalmodfull, direction = "backward", trace = F)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodnull <- clmm(mold_cover ~ 1, data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodnull <- clmm2(mold_cover ~ 1, data = tunirgb)
ordinalmodfull <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c,
random = colony_id, data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
drop1(ordinalmodfull, test = "F")
ordinalmodfull <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c,
random = colony_id, data = tunirgb)
knitr::opts_chunk$set(echo = TRUE)
drop1(ordinalmodfull, test = "F")
knitr::opts_chunk$set(echo = TRUE)
drop1(ordinalmod, test = "F")
knitr::opts_chunk$set(echo = TRUE)
drop1(ordinalmodnull, test = "F")
knitr::opts_chunk$set(echo = TRUE)
summary(ordinalmodfull)
ordinalmodfull <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c,
random = colony_id, data = tunirgb)
summary(ordinalmodfull)
knitr::opts_chunk$set(echo = TRUE)
ordinalmodfull <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c,
random = colony_id, data = tunirgb, Hess = TRUE)
summary(ordinalmodfull)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, tidy=TRUE, tidy.opts = list(width.cutoff = 80))
library(gamlss)
library(fitdistrplus)
library(tidyverse)
setwd("~/OneDrive - UBC/Year 5/Animal Structure and Function/tunicate-heat-immersion")
setwd("~/OneDrive - UBC/Year 5/Data Analysis/T10")
mydata <- read.csv("data.csv")
View(mydata)
str(mydata)
descdist(mydata$upper)
shapiro.test(mydata$upper)
fitDist(upper, data = mydata, type = "reallAll", try.gamlss = T)
fitDist(upper, data = mydata, type = "reallAll", try.gamlss = T)
fitDist(upper, data = mydata, type = "realAll", try.gamlss = T)
par(mfrow = c(2,2)) # sets our plot window to be 2 x 2 (instead of a single plot)
mSEP2 <- histDist(beasts$danger, "SEP2", density = T, main = "SEP2")
mUF <- histDist(beasts$danger, "UF", density = T, main = "Uniform")
mNO <- histDist(beasts$danger, "NO", density = T, main = "Normal")
mSEP2 <- histDist(mydata$upper, "SEP2", density = T, main = "SEP2")
mUF <- histDist(mydata$upper, "UF", density = T, main = "Uniform")
mNO <- histDist(mydata$upper, "NO", density = T, main = "Normal")
par(mfrow = c(2,2)) # sets our plot window to be 2 x 2 (instead of a single plot)
mSEP2 <- histDist(mydata$upper, "SEP2", density = T, main = "SEP2")
mUF <- histDist(mydata$upper, "U", density = T, main = "Uniform")
mNO <- histDist(mydata$upper, "NO", density = T, main = "Normal")
par(mfrow = c(2,2)) # sets our plot window to be 2 x 2 (instead of a single plot)
mSEP2 <- histDist(mydata$upper, "SEP2", density = T, main = "SEP2")
mUF <- histDist(mydata$upper, "UN", density = T, main = "Uniform")
mNO <- histDist(mydata$upper, "NO", density = T, main = "Normal")
descdist(mydata$upper)
setwd("~/OneDrive - UBC/Year 5/Data Analysis/T09 GAM")
data <- read_delim("gam_beasts.csv", delim = ',')
beasts <- data %>% na.omit()
descdist(beasts$danger)
View(beasts)
data <- data %>%
rename(country = Country, native = Native, danger = Level_of_danger, temp = Temperature, area = Country_size) %>%
mutate(logArea = log2(area))
beasts <- data %>% na.omit()
descdist(beasts$danger)
setwd("~/OneDrive - UBC/Year 5/Data Analysis/T10")
mUF <- histDist(mydata$upper, "UNI", density = T, main = "Uniform")
par(mfrow = c(1,2)) # sets our plot window to be 2 x 2 (instead of a single plot)
mSEP2 <- histDist(mydata$upper, "SEP2", density = T, main = "SEP2")
mNO <- histDist(mydata$upper, "NO", density = T, main = "Normal")
GAIC(mNO, mSEP2)
modSEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata)
modSEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata, control = gamlss.control(n.cyc = 150))
modNO <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = NO(), data = mydata)
summary(modSEP2)
summary(modNO)
GAIC(modSEP2, modNO)
View(mydata)
library(ggplot2)
modSEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata, control = gamlss.control(n.cyc = 150))
modNO <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = NO(), data = mydata)
mod1SEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata, control = gamlss.control(n.cyc = 150))
modNO <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = NO(), data = mydata)
library(gamlss)
library(fitdistrplus)
library(tidyverse)
library(ggplot2)
mydata <- read.csv("data.csv")
str(mydata)
descdist(mydata$upper)
modSEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata, control = gamlss.control(n.cyc = 150))
modNO <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = NO(), data = mydata)
modyuhSEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata, control = gamlss.control(n.cyc = 150))
modNO <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = NO(), data = mydata)
modyuhSEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata,
)
modyuhSEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata,
control = gamlss.control(n.cyc = 150))
modnoncovergentSEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata)
mod1SEP2 <- gamlss(upper ~ pop + growth*mass + sex*caught_prior, family = SEP2(), data = mydata,
control = gamlss.control(n.cyc = 150))
knitr::opts_chunk$set(echo = TRUE)
tunidata <- read.csv("tunicate_master.csv")
tunidata$temperature_c <- as.factor(tunidata$temperature_c)
tunidata$water_type <- as.factor(tunidata$water_type)
tunidata$exposure_time_s <- as.factor(tunidata$exposure_time_s)
shapiro.test(tunidata$X48hr_rgb)
tunirgb <- tunidata %>%
mutate(exposure_time_s = as.factor(exposure_time_s)) %>%
mutate(temperature_c = as.factor(temperature_c))
library(tidyverse)
library(cowplot)
library(ggplot2)
library(here)
library(tidyr)
library(performance)
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(FSA)
library(goft)
library(MASS)
library(ordinal)
setwd("~/OneDrive - UBC/Year 5/Animal Structure and Function/tunicate-heat-immersion")
knitr::opts_chunk$set(echo = TRUE)
tunidata <- read.csv("tunicate_master.csv")
tunidata$temperature_c <- as.factor(tunidata$temperature_c)
tunidata$water_type <- as.factor(tunidata$water_type)
tunidata$exposure_time_s <- as.factor(tunidata$exposure_time_s)
tuni_stacked = tunidata %>%
group_by(mold_cover, temperature_c, water_type, exposure_time_s) %>%
summarise(frequency = n())%>%
mutate(temperature_c=  as.factor(temperature_c))
ggplot(tuni_stacked, aes(y = frequency, x = temperature_c, fill = as.factor(mold_cover))) +
geom_bar(stat = "identity", position = "fill") +
facet_grid(as.factor(exposure_time_s) ~ water_type) +
labs(x ="Temperature (°C)", y = "Frequency")+
scale_fill_brewer(palette = "Oranges", direction=1) +
labs(fill = "Mold Cover") +
theme_cowplot()
tunirgb$colony_id <- as.factor(tunirgb$colony_id)
tunirgb <- tunidata %>%
mutate(exposure_time_s = as.factor(exposure_time_s)) %>%
mutate(temperature_c = as.factor(temperature_c))
tunirgb <- tunirgb %>% mutate(deltachangergb = X48hr_rgb-initial_rgb)
tunirgb$colony_id <- as.factor(tunirgb$colony_id)
tunirgb$mold_cover <- as.factor(tunirgb$mold_cover)
ordinalmodfull <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c,
random = colony_id, data = tunirgb, Hess = TRUE)
summary(ordinalmodfull)
tunirgb <- tunidata %>%
mutate(exposure_time_s = as.factor(exposure_time_s)) %>%
mutate(temperature_c = as.factor(temperature_c))
modrgb <- lm(X48hr_rgb ~ exposure_time_s + water_type + temperature_c + exposure_time_s*water_type*temperature_c + (1|colony_id), family = gaussian, data = tunirgb)
summary(mod)
knitr::opts_chunk$set(echo = TRUE)
summary(modrgb)
newmodrgb <- lm(X48hr_rgb ~ water_type + temperature_c, data = tunirgb)
summary(newmodrgb)
knitr::opts_chunk$set(echo = TRUE)
tunidata <- read.csv("tunicate_master.csv")
tunidata$temperature_c <- as.factor(tunidata$temperature_c)
tunidata$water_type <- as.factor(tunidata$water_type)
tunidata$exposure_time_s <- as.factor(tunidata$exposure_time_s)
shapiro.test(tunidata$X48hr_rgb)
tunirgb <- tunidata %>%
mutate(exposure_time_s = as.factor(exposure_time_s)) %>%
mutate(temperature_c = as.factor(temperature_c))
library(tidyverse)
library(cowplot)
library(ggplot2)
library(here)
library(tidyr)
library(performance)
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(FSA)
library(goft)
library(MASS)
library(ordinal)
library(tidyverse)
library(cowplot)
library(ggplot2)
library(here)
library(tidyr)
library(performance)
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(FSA)
library(goft)
library(MASS)
library(ordinal)
tunidata <- read.csv("tunicate_master.csv")
tunidata$temperature_c <- as.factor(tunidata$temperature_c)
tunidata$water_type <- as.factor(tunidata$water_type)
tunidata$exposure_time_s <- as.factor(tunidata$exposure_time_s)
shapiro.test(tunidata$X48hr_rgb)
tunirgb <- tunidata %>%
mutate(exposure_time_s = as.factor(exposure_time_s)) %>%
mutate(temperature_c = as.factor(temperature_c))
modrgb <- lm(X48hr_rgb ~ exposure_time_s + water_type + temperature_c + exposure_time_s*water_type*temperature_c + (1|colony_id), family = gaussian, data = tunirgb)
summary(modrgb)
modrgb <- lm(X48hr_rgb ~ exposure_time_s + water_type + temperature_c + exposure_time_s*water_type*temperature_c, family = gaussian, data = tunirgb)
stepmodrgb <- stepAIC(modrgb, direction = "backward", trace = F)
formula(stepmodrgb)
newmodrgb <- lm(X48hr_rgb ~ water_type + temperature_c, data = tunirgb)
summary(newmodrgb)
tunirgb <- tunirgb %>% mutate(deltachangergb = X48hr_rgb-initial_rgb)
rgbboxplot <- ggplot(tunirgb, aes(x=temperature_c, y=deltachangergb,
fill = water_type, group = interaction(temperature_c, water_type))) +
geom_boxplot(outlier.shape = NA, alpha = 0.1, width = 0.75) + #ylim(-1,1.5) +
geom_jitter(position = position_dodge(width=0.75))+
xlab("Temperature (°C)") + ylab("Change in Mean RGB") +
theme_classic() + labs(fill = "Water Type")
rgbboxplot
tuni_stacked = tunidata %>%
group_by(mold_cover, temperature_c, water_type, exposure_time_s) %>%
summarise(frequency = n())%>%
mutate(temperature_c=  as.factor(temperature_c))
ggplot(tuni_stacked, aes(y = frequency, x = temperature_c, fill = as.factor(mold_cover))) +
geom_bar(stat = "identity", position = "fill") +
facet_grid(as.factor(exposure_time_s) ~ water_type) +
labs(x ="Temperature (°C)", y = "Frequency")+
scale_fill_brewer(palette = "Oranges", direction=1) +
labs(fill = "Mold Cover") +
theme_cowplot()
descdist(tunidata$mold_cover)
fit <- fitDist(mold_cover, data = tunidata, type = "realAll", try.gamlss = T)
fit$fits
mST1 <- histDist(tunidata$mold_cover, "ST1", density = T, main = "Skew t (Azzalini type 1)")
mNO <- histDist(tunidata$mold_cover, "NO", density = T, main = "Normal")
GAIC(mST1, mNO)
tunirgb$colony_id <- as.factor(tunirgb$colony_id)
tunirgb$mold_cover <- as.factor(tunirgb$mold_cover)
ordinalmodfull <- clmm2(mold_cover ~ water_type + temperature_c + exposure_time_s +
exposure_time_s*water_type*temperature_c,
random = colony_id, data = tunirgb, Hess = TRUE)
summary(ordinalmodfull)
#temperature_c90 p=0.041566
#moldyaov <- aov(mold_cover ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s, data = tunirgb)
#summary(moldyaov)
#TukeyHSD(moldyaov)
tuni_data1 <- tunidata %>% mutate(ChangeWetWeight = final_weight_g-post_acclimation_weight_g)
#Visualizing Data
p <- ggplot(tuni_data1, aes(x = exposure_time_s, y = ChangeWetWeight, fill = water_type))+
labs(x = "Exposure time (s)", y = "Change in wet weight (g)", fill = "Water type")+
#labs(title = "Temperature (°C)")+
geom_boxplot()
p + facet_grid(cols = vars(temperature_c))
hist(tuni_data1$ChangeWetWeight)
shapiro.test(tuni_data1$ChangeWetWeight)
#p-value = 0.7646 thus follows a normal distribution!
descdist(tuni_data1$ChangeWetWeight)
#Statistics for Change in Weight after 3 Weeks
#Distribution Fitting
fitDist(ChangeWetWeight, data = tuni_data1, type = "realline", try.gamlss = T)
#this also gives normal distribution
#Linear Model
mod_changeweight <- lm(ChangeWetWeight ~ exposure_time_s + water_type + temperature_c + exposure_time_s*water_type*temperature_c, family = gaussian, data = tuni_data1)
summary(mod_changeweight)
#Model Selection
step.mod_changeweight <- stepAIC(mod_changeweight, direction = "backward", trace = F)
summary(step.mod_changeweight)
formula(step.mod_changeweight)
#ChangeWetWeight ~ water_type + temperature_c + water_type:temperature_c
check_model(step.mod_changeweight)
#check model when water_type:temperature_c was present and had major collinearity issues, thus removed water_type:temperature and check model again and collinearity issues were solved
mod_changeweightv2 <- lm(ChangeWetWeight ~ water_type + temperature_c, family = gaussian, data = tuni_data1)
summary(mod_changeweightv2)
#significant p-value for temperature_c90 (p=value = 0.0315)
shapiro.test(tunidata$survival)
#p-value = 2.047e-15
fitDist(survival, data = tunidata, type = "binom", try.gamlss = T)
#family = BI (binomial)
mod_survival <- gamlss(survival ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s + random(as.factor(colony_id)), family = BI, data = tunidata)
summary(mod_survival)
step.modsurvival <- stepGAIC(mod_survival, direction = "backward", trace = F)
summary(step.modsurvival)
formula(step.modsurvival)
#survival ~ temperature_c
dunnTest(survival ~ temperature_c, data = tunidata)
#Comparison        Z      P.unadj        P.adj
#1    12 - 50 2.817892 4.834013e-03 1.933605e-02*
#2    12 - 70 4.428115 9.506008e-06 5.703605e-05*
#3    50 - 70 1.610224 1.073490e-01 3.220471e-01
#4    12 - 90 4.428115 9.506008e-06 4.753004e-05*
#5    50 - 90 1.610224 1.073490e-01 2.146980e-01
#6    70 - 90 0.000000 1.000000e+00 1.000000e+00
#p-value for 12-90 and 12-70 is significant!
fitDist(attachment, data = tuni_data1, type = "binom", try.gamlss = T)
#family = BI (binomial)
mod <- gamlss(attachment ~ water_type + temperature_c + exposure_time_s + water_type*temperature_c*exposure_time_s, family = BI, data = tuni_data1)
summary(mod)
step.mod <- stepAIC(mod, direction = "backward", trace = F)
summary(step.mod)
formula(step.mod)
#attachment ~ temperature_c
dunnTest(attachment ~ temperature_c, data = tuni_data1)
#Comparison        Z      P.unadj        P.adj
#1    12 - 50 5.018805 5.199384e-07 3.119630e-06*
#2    12 - 70 5.018805 5.199384e-07 2.599692e-06*
#3    50 - 70 0.000000 1.000000e+00 1.000000e+00
#4    12 - 90 5.018805 5.199384e-07 2.079753e-06*
#5    50 - 90 0.000000 1.000000e+00 1.000000e+00
#6    70 - 90 0.000000 1.000000e+00 1.000000e+00
#p-value for 12-90, 12-70 and 12-50 are significant
print(sessionInfo())
citation("here")
citation("lm")
citation("clmm")
citation("ordinal")
citation()
